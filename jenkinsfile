pipeline {
    // 스테이지 별로 다른 거
    agent any

    triggers {
        pollSCM('*/3 * * * *')
    }

    environment {
      AWS_ACCESS_KEY_ID = credentials('awsAccessKeyId')
      AWS_SECRET_ACCESS_KEY = credentials('awsSecretAccessKey')
      AWS_DEFAULT_REGION = 'ap-northeast-2'
      HOME = '.' // Avoid npm root owned
    }

    stages {
        // 레포지토리를 다운로드 받음
        stage('Prepare') {
            agent any

            steps {
                echo 'Clonning Repository'

                git url: 'https://github.com/donup3/jenkins-CI-CD-test.git',
                    branch: 'master',
                    credentialsId: 'gittest'
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    echo 'Successfully Cloned Repository'
                }

                always {
                  echo "i tried..."
                }

                cleanup {
                  echo "after all other post condition"
                }
            }
        }

        stage('Bulid Backend') {
          agent any
          steps {
            echo 'Build Backend'

            sh """
            chmod +x ./gradlew
            ./gradlew build
            """
          }

          post {
            failure {
              error 'This pipeline stops here...'
            }
          }
        }

        stage('Deploy Backend') {
          agent any

          steps {
            echo 'Deploy Backend'

                sh '''
                echo "> 현재 구동 중인 애플리케이션 pid 확인"

                CURRENT_PID=$(pgrep -f scheduler.*.jar)

                echo "현재 구동 중인 애플리케이션 pid: $CURRENT_PID"

                if [ -z "$CURRENT_PID" ]; then
                        echo "> 현재 구동 중인 애플리케이션이 없으므로 종료하지 않습니다."
                else
                        echo "> kill -15 $CURRENT_PID"
                        kill -15 $CURRENT_PID
                        sleep 5
                fi

                echo "> 새 애플리케이션 배포"

                JAR_NAME=$(ls -tr $REPOSITORY/ | grep jar | tail -n 1)

                echo "> JAR NAME: $JAR_NAME"

                nohup java -jar $REPOSITORY/$JAR_NAME 2>&1 &
                pwd
                cd build/libs
                nohup java -jar build/libs/scheduler-0.0.1-SNAPSHOT.jar	 2>&1 &
                '''

          }

        }
    }
}
